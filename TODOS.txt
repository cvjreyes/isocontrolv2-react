DONE ‚úî
- FEEDPipes.jsx requests with axios or custom api ( recommended ) with included error handling and request state like isLoading
- TABLE make wrapper
- TABLE make routing
- TABLE get info
- TABLE display info
- TABLE implement table
- TABLE modify table
- TABLE paste from excel
- TABLE filter then paste
- TABLE paste more than 1 line
- TABLE paste more than 1 line on filtered
- TABLE copy 1 row
- TABLE copy +1 row
- TABLE copy all rows
- TABLE paste 1 cell
- TABLE paste +1 cell ‚ùå
- TABLE paste 1 row
- TABLE paste +1 row
- TABLE - when change something => update line_ref + tag
- TABLE copy row on click ID
- HIGHLIGHT CHANGES state array saving objects with id
- HIGHLIGHT CHANGES in render => check for id
- HIGHLIGHT CHANGES if match: greenish background
- HIGHLIGHT CHANGES this way when saving you only have to go throgh those specific ids + keys
- TABLE add dropdowns to: line_ref, area, diameter, train, status
- TABLE submit changes 
- TABLE delete row 
- si already exists cambiar color alerta
- a√±adir logo isocontrol
- ADDING ROW
- que se vea el owner
- IFD Main
- Edit Forecast 
- change password O- paste on IFD Add Pipe

DOING üîÅ
  - Trash SEAN 

TODO ‚ùå
  - STYLE:
    - line control
    - add
    - forecast
    - main
    - add
    - my tray
      - arriba
    - trays
      - title bigger
      - arriba
  - my tray
    - return to modelled* once csv is implemented

PARA QUE SALGA MODELLED:
- se importa un csv de 3d
- este csv rellena dpipes
- si la l√≠nea ya existe => MODELLED
- si la l√≠nea no exist√≠a => MODELLED*

OLD
- se importa el csv
- del csv se actualiza tabla dpipes ( CRON )
- de dpipes se comprueba con ifd_pipes 
- se decide si modelled o modelled*
- se pasa a otra tabla

NEW
- attempt to merge csv import with ifd_pipes => comprobar el code in prod ( node_cron de fmc )
(NODE-CRON)[https://github.com/cvjreyes/node-cron/blob/main/app/src/resources/cron/cron.controller.js]
- re-write node-cron for it to update ifd_pipes or fallback to use ifd_pipes_aux
- if estimated => modelled
- if _ => modelled*

FUTURO:
  - change status "MODELLED (100%)" to "modelled" then format on client and progress values on separate file in node
  - tabla escondida en FEED y en IFD => bring it back pipingProgress.js en old
  - add error handler for when server is down ( something like 'please hold on' )
    - mientras se actualiza lista de l√≠neas
    - encontrar soluci√≥n para que la gente no pueda cambiar cosas

TABLES que no llegu√© a probar:
- react-virtualized
- react-data-grid
- react-super-responsive-table
- react-bootstrap-table
- react-datasheet
- react-grid
